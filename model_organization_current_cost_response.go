/*
 * [BETA] Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.
 *
 * API version: 1.0.0
 * Contact: support+api+documentation@qovery.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// OrganizationCurrentCostResponse struct for OrganizationCurrentCostResponse
type OrganizationCurrentCostResponse struct {
	TotalInCents     int32                         `json:"total_in_cents"`
	Total            float32                       `json:"total"`
	CurrencyCode     string                        `json:"currency_code"`
	BillingStartedOn *time.Time                    `json:"billing_started_on,omitempty"`
	BillingEndedOn   *time.Time                    `json:"billing_ended_on,omitempty"`
	BudgetExceeded   *bool                         `json:"budget_exceeded,omitempty"`
	Projects         *[]ProjectCurrentCostResponse `json:"projects,omitempty"`
}

// NewOrganizationCurrentCostResponse instantiates a new OrganizationCurrentCostResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCurrentCostResponse(totalInCents int32, total float32, currencyCode string) *OrganizationCurrentCostResponse {
	this := OrganizationCurrentCostResponse{}
	this.TotalInCents = totalInCents
	this.Total = total
	this.CurrencyCode = currencyCode
	return &this
}

// NewOrganizationCurrentCostResponseWithDefaults instantiates a new OrganizationCurrentCostResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCurrentCostResponseWithDefaults() *OrganizationCurrentCostResponse {
	this := OrganizationCurrentCostResponse{}
	return &this
}

// GetTotalInCents returns the TotalInCents field value
func (o *OrganizationCurrentCostResponse) GetTotalInCents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalInCents
}

// GetTotalInCentsOk returns a tuple with the TotalInCents field value
// and a boolean to check if the value has been set.
func (o *OrganizationCurrentCostResponse) GetTotalInCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalInCents, true
}

// SetTotalInCents sets field value
func (o *OrganizationCurrentCostResponse) SetTotalInCents(v int32) {
	o.TotalInCents = v
}

// GetTotal returns the Total field value
func (o *OrganizationCurrentCostResponse) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *OrganizationCurrentCostResponse) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *OrganizationCurrentCostResponse) SetTotal(v float32) {
	o.Total = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *OrganizationCurrentCostResponse) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *OrganizationCurrentCostResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *OrganizationCurrentCostResponse) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetBillingStartedOn returns the BillingStartedOn field value if set, zero value otherwise.
func (o *OrganizationCurrentCostResponse) GetBillingStartedOn() time.Time {
	if o == nil || o.BillingStartedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.BillingStartedOn
}

// GetBillingStartedOnOk returns a tuple with the BillingStartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCurrentCostResponse) GetBillingStartedOnOk() (*time.Time, bool) {
	if o == nil || o.BillingStartedOn == nil {
		return nil, false
	}
	return o.BillingStartedOn, true
}

// HasBillingStartedOn returns a boolean if a field has been set.
func (o *OrganizationCurrentCostResponse) HasBillingStartedOn() bool {
	if o != nil && o.BillingStartedOn != nil {
		return true
	}

	return false
}

// SetBillingStartedOn gets a reference to the given time.Time and assigns it to the BillingStartedOn field.
func (o *OrganizationCurrentCostResponse) SetBillingStartedOn(v time.Time) {
	o.BillingStartedOn = &v
}

// GetBillingEndedOn returns the BillingEndedOn field value if set, zero value otherwise.
func (o *OrganizationCurrentCostResponse) GetBillingEndedOn() time.Time {
	if o == nil || o.BillingEndedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.BillingEndedOn
}

// GetBillingEndedOnOk returns a tuple with the BillingEndedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCurrentCostResponse) GetBillingEndedOnOk() (*time.Time, bool) {
	if o == nil || o.BillingEndedOn == nil {
		return nil, false
	}
	return o.BillingEndedOn, true
}

// HasBillingEndedOn returns a boolean if a field has been set.
func (o *OrganizationCurrentCostResponse) HasBillingEndedOn() bool {
	if o != nil && o.BillingEndedOn != nil {
		return true
	}

	return false
}

// SetBillingEndedOn gets a reference to the given time.Time and assigns it to the BillingEndedOn field.
func (o *OrganizationCurrentCostResponse) SetBillingEndedOn(v time.Time) {
	o.BillingEndedOn = &v
}

// GetBudgetExceeded returns the BudgetExceeded field value if set, zero value otherwise.
func (o *OrganizationCurrentCostResponse) GetBudgetExceeded() bool {
	if o == nil || o.BudgetExceeded == nil {
		var ret bool
		return ret
	}
	return *o.BudgetExceeded
}

// GetBudgetExceededOk returns a tuple with the BudgetExceeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCurrentCostResponse) GetBudgetExceededOk() (*bool, bool) {
	if o == nil || o.BudgetExceeded == nil {
		return nil, false
	}
	return o.BudgetExceeded, true
}

// HasBudgetExceeded returns a boolean if a field has been set.
func (o *OrganizationCurrentCostResponse) HasBudgetExceeded() bool {
	if o != nil && o.BudgetExceeded != nil {
		return true
	}

	return false
}

// SetBudgetExceeded gets a reference to the given bool and assigns it to the BudgetExceeded field.
func (o *OrganizationCurrentCostResponse) SetBudgetExceeded(v bool) {
	o.BudgetExceeded = &v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *OrganizationCurrentCostResponse) GetProjects() []ProjectCurrentCostResponse {
	if o == nil || o.Projects == nil {
		var ret []ProjectCurrentCostResponse
		return ret
	}
	return *o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCurrentCostResponse) GetProjectsOk() (*[]ProjectCurrentCostResponse, bool) {
	if o == nil || o.Projects == nil {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *OrganizationCurrentCostResponse) HasProjects() bool {
	if o != nil && o.Projects != nil {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []ProjectCurrentCostResponse and assigns it to the Projects field.
func (o *OrganizationCurrentCostResponse) SetProjects(v []ProjectCurrentCostResponse) {
	o.Projects = &v
}

func (o OrganizationCurrentCostResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total_in_cents"] = o.TotalInCents
	}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if o.BillingStartedOn != nil {
		toSerialize["billing_started_on"] = o.BillingStartedOn
	}
	if o.BillingEndedOn != nil {
		toSerialize["billing_ended_on"] = o.BillingEndedOn
	}
	if o.BudgetExceeded != nil {
		toSerialize["budget_exceeded"] = o.BudgetExceeded
	}
	if o.Projects != nil {
		toSerialize["projects"] = o.Projects
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationCurrentCostResponse struct {
	value *OrganizationCurrentCostResponse
	isSet bool
}

func (v NullableOrganizationCurrentCostResponse) Get() *OrganizationCurrentCostResponse {
	return v.value
}

func (v *NullableOrganizationCurrentCostResponse) Set(val *OrganizationCurrentCostResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCurrentCostResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCurrentCostResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCurrentCostResponse(val *OrganizationCurrentCostResponse) *NullableOrganizationCurrentCostResponse {
	return &NullableOrganizationCurrentCostResponse{value: val, isSet: true}
}

func (v NullableOrganizationCurrentCostResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCurrentCostResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
