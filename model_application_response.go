/*
 * [BETA] Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.
 *
 * API version: 1.0.0
 * Contact: support+api+documentation@qovery.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// ApplicationResponse struct for ApplicationResponse
type ApplicationResponse struct {
	Environment   *ReferenceObject                  `json:"environment,omitempty"`
	GitRepository *ApplicationGitRepositoryResponse `json:"git_repository,omitempty"`
	// Maximum cpu that can be allocated to the application based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
	MaximumCpu *float32 `json:"maximum_cpu,omitempty"`
	// Maximum memory that can be allocated to the application based on organization cluster configuration. unit is MB. 1024 MB = 1GB
	MaximumMemory *float32                            `json:"maximum_memory,omitempty"`
	Id            string                              `json:"id"`
	CreatedAt     time.Time                           `json:"created_at"`
	UpdatedAt     *time.Time                          `json:"updated_at,omitempty"`
	Storage       *[]ApplicationStorageRequestStorage `json:"storage,omitempty"`
	Ports         *[]ApplicationPortRequestPorts      `json:"ports,omitempty"`
}

// NewApplicationResponse instantiates a new ApplicationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationResponse(id string, createdAt time.Time) *ApplicationResponse {
	this := ApplicationResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	return &this
}

// NewApplicationResponseWithDefaults instantiates a new ApplicationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationResponseWithDefaults() *ApplicationResponse {
	this := ApplicationResponse{}
	var maximumCpu float32 = 250
	this.MaximumCpu = &maximumCpu
	var maximumMemory float32 = 256
	this.MaximumMemory = &maximumMemory
	return &this
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *ApplicationResponse) GetEnvironment() ReferenceObject {
	if o == nil || o.Environment == nil {
		var ret ReferenceObject
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetEnvironmentOk() (*ReferenceObject, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ApplicationResponse) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given ReferenceObject and assigns it to the Environment field.
func (o *ApplicationResponse) SetEnvironment(v ReferenceObject) {
	o.Environment = &v
}

// GetGitRepository returns the GitRepository field value if set, zero value otherwise.
func (o *ApplicationResponse) GetGitRepository() ApplicationGitRepositoryResponse {
	if o == nil || o.GitRepository == nil {
		var ret ApplicationGitRepositoryResponse
		return ret
	}
	return *o.GitRepository
}

// GetGitRepositoryOk returns a tuple with the GitRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetGitRepositoryOk() (*ApplicationGitRepositoryResponse, bool) {
	if o == nil || o.GitRepository == nil {
		return nil, false
	}
	return o.GitRepository, true
}

// HasGitRepository returns a boolean if a field has been set.
func (o *ApplicationResponse) HasGitRepository() bool {
	if o != nil && o.GitRepository != nil {
		return true
	}

	return false
}

// SetGitRepository gets a reference to the given ApplicationGitRepositoryResponse and assigns it to the GitRepository field.
func (o *ApplicationResponse) SetGitRepository(v ApplicationGitRepositoryResponse) {
	o.GitRepository = &v
}

// GetMaximumCpu returns the MaximumCpu field value if set, zero value otherwise.
func (o *ApplicationResponse) GetMaximumCpu() float32 {
	if o == nil || o.MaximumCpu == nil {
		var ret float32
		return ret
	}
	return *o.MaximumCpu
}

// GetMaximumCpuOk returns a tuple with the MaximumCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetMaximumCpuOk() (*float32, bool) {
	if o == nil || o.MaximumCpu == nil {
		return nil, false
	}
	return o.MaximumCpu, true
}

// HasMaximumCpu returns a boolean if a field has been set.
func (o *ApplicationResponse) HasMaximumCpu() bool {
	if o != nil && o.MaximumCpu != nil {
		return true
	}

	return false
}

// SetMaximumCpu gets a reference to the given float32 and assigns it to the MaximumCpu field.
func (o *ApplicationResponse) SetMaximumCpu(v float32) {
	o.MaximumCpu = &v
}

// GetMaximumMemory returns the MaximumMemory field value if set, zero value otherwise.
func (o *ApplicationResponse) GetMaximumMemory() float32 {
	if o == nil || o.MaximumMemory == nil {
		var ret float32
		return ret
	}
	return *o.MaximumMemory
}

// GetMaximumMemoryOk returns a tuple with the MaximumMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetMaximumMemoryOk() (*float32, bool) {
	if o == nil || o.MaximumMemory == nil {
		return nil, false
	}
	return o.MaximumMemory, true
}

// HasMaximumMemory returns a boolean if a field has been set.
func (o *ApplicationResponse) HasMaximumMemory() bool {
	if o != nil && o.MaximumMemory != nil {
		return true
	}

	return false
}

// SetMaximumMemory gets a reference to the given float32 and assigns it to the MaximumMemory field.
func (o *ApplicationResponse) SetMaximumMemory(v float32) {
	o.MaximumMemory = &v
}

// GetId returns the Id field value
func (o *ApplicationResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApplicationResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApplicationResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApplicationResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ApplicationResponse) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ApplicationResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ApplicationResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *ApplicationResponse) GetStorage() []ApplicationStorageRequestStorage {
	if o == nil || o.Storage == nil {
		var ret []ApplicationStorageRequestStorage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetStorageOk() (*[]ApplicationStorageRequestStorage, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *ApplicationResponse) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given []ApplicationStorageRequestStorage and assigns it to the Storage field.
func (o *ApplicationResponse) SetStorage(v []ApplicationStorageRequestStorage) {
	o.Storage = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *ApplicationResponse) GetPorts() []ApplicationPortRequestPorts {
	if o == nil || o.Ports == nil {
		var ret []ApplicationPortRequestPorts
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponse) GetPortsOk() (*[]ApplicationPortRequestPorts, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *ApplicationResponse) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []ApplicationPortRequestPorts and assigns it to the Ports field.
func (o *ApplicationResponse) SetPorts(v []ApplicationPortRequestPorts) {
	o.Ports = &v
}

func (o ApplicationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.GitRepository != nil {
		toSerialize["git_repository"] = o.GitRepository
	}
	if o.MaximumCpu != nil {
		toSerialize["maximum_cpu"] = o.MaximumCpu
	}
	if o.MaximumMemory != nil {
		toSerialize["maximum_memory"] = o.MaximumMemory
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationResponse struct {
	value *ApplicationResponse
	isSet bool
}

func (v NullableApplicationResponse) Get() *ApplicationResponse {
	return v.value
}

func (v *NullableApplicationResponse) Set(val *ApplicationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationResponse(val *ApplicationResponse) *NullableApplicationResponse {
	return &NullableApplicationResponse{value: val, isSet: true}
}

func (v NullableApplicationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
