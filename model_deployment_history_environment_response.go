/*
 * [BETA] Qovery API
 *
 * - Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.
 *
 * API version: 1.0.0
 * Contact: support+api+documentation@qovery.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// DeploymentHistoryEnvironmentResponse struct for DeploymentHistoryEnvironmentResponse
type DeploymentHistoryEnvironmentResponse struct {
	Service   *map[string]interface{} `json:"service,omitempty"`
	Id        string                  `json:"id"`
	CreatedAt time.Time               `json:"created_at"`
	UpdatedAt *time.Time              `json:"updated_at,omitempty"`
}

// NewDeploymentHistoryEnvironmentResponse instantiates a new DeploymentHistoryEnvironmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentHistoryEnvironmentResponse(id string, createdAt time.Time) *DeploymentHistoryEnvironmentResponse {
	this := DeploymentHistoryEnvironmentResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	return &this
}

// NewDeploymentHistoryEnvironmentResponseWithDefaults instantiates a new DeploymentHistoryEnvironmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentHistoryEnvironmentResponseWithDefaults() *DeploymentHistoryEnvironmentResponse {
	this := DeploymentHistoryEnvironmentResponse{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *DeploymentHistoryEnvironmentResponse) GetService() map[string]interface{} {
	if o == nil || o.Service == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentResponse) GetServiceOk() (*map[string]interface{}, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *DeploymentHistoryEnvironmentResponse) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given map[string]interface{} and assigns it to the Service field.
func (o *DeploymentHistoryEnvironmentResponse) SetService(v map[string]interface{}) {
	o.Service = &v
}

// GetId returns the Id field value
func (o *DeploymentHistoryEnvironmentResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeploymentHistoryEnvironmentResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DeploymentHistoryEnvironmentResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DeploymentHistoryEnvironmentResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DeploymentHistoryEnvironmentResponse) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DeploymentHistoryEnvironmentResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *DeploymentHistoryEnvironmentResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o DeploymentHistoryEnvironmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentHistoryEnvironmentResponse struct {
	value *DeploymentHistoryEnvironmentResponse
	isSet bool
}

func (v NullableDeploymentHistoryEnvironmentResponse) Get() *DeploymentHistoryEnvironmentResponse {
	return v.value
}

func (v *NullableDeploymentHistoryEnvironmentResponse) Set(val *DeploymentHistoryEnvironmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentHistoryEnvironmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentHistoryEnvironmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentHistoryEnvironmentResponse(val *DeploymentHistoryEnvironmentResponse) *NullableDeploymentHistoryEnvironmentResponse {
	return &NullableDeploymentHistoryEnvironmentResponse{value: val, isSet: true}
}

func (v NullableDeploymentHistoryEnvironmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentHistoryEnvironmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
